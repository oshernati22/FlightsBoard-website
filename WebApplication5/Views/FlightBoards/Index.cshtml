@model IEnumerable<WebApplication5.Models.FlightBoard>

@{
    ViewBag.Title = "Index";

}

<div class="contianer" style="padding-top:7px">
    <div class="jumbotron" style="background-image:url(../../resources/airplane-983991_1920.jpg);background-size:cover;background-repeat:no-repeat; opacity:0.9;">
        <h2>choose your company flight board</h2>
        <hr class="my-4">
        @if (Session["name"].ToString().Contains(" Admin"))
        {
            <p>
                @Html.ActionLink("Create New FlightBoard", "Create") | @Html.ActionLink("Create New Flight", "Create", "Flights")
            </p>

            <p>
                @Html.ActionLink("Flights group by Flightboards", "groupBy", "FlightBoards") |  @Html.ActionLink("join of flightBoard with flightAttendant", "joinFlight", "FlightBoards") | @Html.ActionLink("join of flightBoard with plane", "joinPlane", "FlightBoards")
            </p>

        }
        <div class="row">
            <div class="col-md-4 col-sm-6 ">
                <div>
                    <form role="form" action="/FlightBoards/Search" method="post">
                        <div class="form-group">
                            <input type="text" name="boardname" id="name" style="border-radius: 20px 20px 20px 20px;width: 85% !important;height: 30px; position:absolute;left:5%" class="form-control input-sm row-cols-sm-1" placeholder="Search by board name">
                            <input type="submit" class="btn btn-primary " style="background-color:royalblue !important;border-radius: 20px 20px 20px 20px; position:relative;height:30px;left:72.5%; " value="Search">
                        </div>
                    </form>

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 col-sm-6 ">
                <form role="form" action="/FlightBoards/displayFlights" method="post">
                    @foreach (var item in Model)
                    {
                        <div class="form-group" style="padding-left:10%">
                            <div class="pretty p-icon p-round p-tada">
                                <input type="checkbox" id="inlineCheckbox1" value="@Html.DisplayFor(modelItem => item.flightBoardID)">
                                <div class="state p-primary-o">
                                    <i class="icon mdi mdi-heart"></i>
                                    <label>@Html.DisplayFor(modelItem => item.boardName)</label>
                                </div>
                            </div>
                        </div>
                    }

                    <input type="button" onclick="func()" id="save_value" value="Move to Flights " style="border-radius: 20px 20px 20px 20px; " class="btn btn-primary btn-block">
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    function func() {
        var val = [];
        $(':checkbox:checked').each(function (i) {
            val[i] = $(this).val();

        });
        window.location = "/FlightBoards/displayFlights?names=" + val;

    }

</script>


@if (Session["name"].ToString().Contains(" Admin"))
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.boardName)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.boardName)
                </td>

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.flightBoardID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.flightBoardID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.flightBoardID })
                </td>

            </tr>
        }

    </table>
}

    <center>
        <h2>site data </h2>
        
        <!-- First Chart -->
        <center>
            <div id="app">
                <div id="chart">

                    <svg id="firstSvg"></svg>
                </div>
                <div id="data">
                   
                                <ul></ul>
                            </div>
                        </div>
        </center>
        <!-- Imports d3js libraries -->
        <script src="https://d3js.org/d3.v5.js"></script>
        <script src="https://d3js.org/d3-scale.v3.min.js"></script>
        <script src="https://d3js.org/d3-axis.v1.min.js"></script>
        <!-- First chart script -->
        <script type="text/javascript">

            var DATA = [
                { id: 'd1', pop: '@Session["flights"]', BoardName: 'Number of Flights' }, { id: 'd2', pop: '@Session["users"]', BoardName: 'Number of Users' },
            { id: 'd3', pop: '@Session["companies"]', BoardName: 'Number of Companies' }, { id: 'd4', pop: '@Session["messages"]', BoardName: 'Number of messeges' }];


        var margins = { top: 20, bottom: 10 };
    var chartWidth = 800, chartHegiht = 200 - margins.top - margins.bottom;
        var xScale = d3.scaleBand().domain(DATA.map((dataPoint) => dataPoint.BoardName)).rangeRound([0, chartWidth]).padding(0.2);
    var yScale = d3.scaleLinear().domain([0, d3.max(DATA, data => data.pop) + 1]).range([chartHegiht, 0]);
    var selectedData = DATA;
    var chartContainer = d3.select('#firstSvg')
        .attr('width', chartWidth)
        .attr('color', 'blue')
        .attr('height', chartHegiht + margins.top + margins.bottom)
         .append('g');
    var chart = chartContainer;
    // Create the bars
    function renderChart() {
        chart
            .selectAll('.bar')
            .data(selectedData, data => data.id)
            .enter()
            .append('rect')
            .classed('bar', true)
            .attr('width', xScale.bandwidth())
            .attr('height', data => chartHegiht - yScale(data.pop))
            .style("fill", "blue")
            .attr('x', data => xScale(data.BoardName))
            .attr('y', data => yScale(data.pop));

        chart
            .selectAll('.bar')
            .attr('color', 'blue')
            .data(selectedData, data => data.id)
            .exit()
            .remove();
        // Add Text
        chart
            .selectAll('.label')
            .data(selectedData, data => data.id)
            .enter()
            .append('text')
            .text(data => data.pop)
            .attr('x', data => xScale(data.BoardName) + xScale.bandwidth() / 2)
            .attr('y', data => yScale(data.pop) - 10)
            .attr('color', 'blue')
            .attr('text-anchor', 'middle')
            .classed('label', true);
        chart
            .selectAll('.label')
            .data(selectedData, data => data.id)
            .attr('color', 'blue')
            .exit()
            .remove();
    }
    renderChart();
    // Add x line
    chart
        .append('g')
        .call(d3.axisBottom(xScale))
        .attr('transform', `translate(0,${chartHegiht + 5})`)
        .attr('color', 'blue');
    var unselected = [];
        </script>
    </center>



